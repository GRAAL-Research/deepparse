Search.setIndex({"docnames": ["cli", "comparer", "dataset_container", "examples/fine_tuning", "examples/fine_tuning_uri", "examples/fine_tuning_with_csv_dataset", "examples/parse_addresses", "examples/parse_addresses_uri", "examples/parse_addresses_with_cli", "examples/retrain_attention_model", "examples/retrain_with_new_prediction_tags", "examples/retrain_with_new_seq2seq_params", "examples/retrained_model_parsing", "examples/single_country_retrain", "index", "parser", "pre_processor"], "filenames": ["cli.rst", "comparer.rst", "dataset_container.rst", "examples/fine_tuning.rst", "examples/fine_tuning_uri.rst", "examples/fine_tuning_with_csv_dataset.rst", "examples/parse_addresses.rst", "examples/parse_addresses_uri.rst", "examples/parse_addresses_with_cli.rst", "examples/retrain_attention_model.rst", "examples/retrain_with_new_prediction_tags.rst", "examples/retrain_with_new_seq2seq_params.rst", "examples/retrained_model_parsing.rst", "examples/single_country_retrain.rst", "index.rst", "parser.rst", "pre_processor.rst"], "titles": ["CLI", "Comparer", "Dataset Container", "Retrain a Pretrained Model", "Retrain a Pretrained Model", "Retrain a Pretrained Model Using a CSV Dataset", "Parse Addresses", "Parse Addresses", "Parse Addresses Using Our CLI", "Retrain an Attention Mechanism Model", "Retrain With New Prediction Tags", "Retrain With New Seq2Seq Parameters", "Use a Retrained Model to Parse Addresses", "Retrain an Address Parser for Single Country Uses", "Here is Deepparse", "Parser", "Pre-Processors"], "terms": {"you": [0, 2, 3, 5, 6, 8, 10, 12, 14, 15], "can": [0, 1, 2, 6, 8, 10, 12, 14, 15, 16], "us": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 15, 16], "our": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15], "address": [0, 2, 5, 16], "directli": [0, 13, 14, 15], "from": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15], "command": [0, 8], "line": [0, 6], "model": [0, 1, 6, 7, 8, 10, 11], "pretrain": [0, 1, 9, 10, 11, 14, 15], "The": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 15, 16], "dataset_path": [0, 8, 14], "i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16], "done": [0, 15], "select": [0, 15], "parsing_model": [0, 14], "ar": [0, 1, 2, 3, 5, 6, 14, 15, 16], "same": [0, 1, 2, 15], "directori": [0, 3, 5, 13, 15], "given": [0, 1, 15], "export_file_nam": [0, 14], "encod": [0, 2, 15], "file": [0, 2, 8, 13, 14, 15], "For": [0, 2, 13, 15, 16], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16], "csv": [0, 2, 8, 14, 15], "output": [0, 2, 8, 15], "moreov": [0, 14], "default": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 15, 16], "we": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16], "log": [0, 15], "some": [0, 2, 6, 10, 12, 14, 15, 16], "inform": [0, 1, 14, 15], "parser": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14], "name": [0, 1, 2, 10, 14, 15, 16], "path": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15], "number": [0, 14, 15, 16], "here": [0, 6, 7, 8, 12, 13, 15, 16], "list": [0, 1, 2, 11, 15], "argument": [0, 2, 8, 13, 15], "descript": 0, "valu": [0, 1, 2, 15], "One": [0, 14], "help": 0, "your": [0, 2, 8, 12, 15], "modul": [0, 14, 15], "pickl": [0, 2, 8, 13, 14, 15], "p": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15], "pckl": 0, "filenam": [0, 13], "infer": [0, 8, 15], "base": [0, 1, 13, 15, 16], "extens": [0, 15], "That": [0, 2], "support": [0, 15], "json": 0, "repositori": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "see": [0, 10, 11, 13, 14, 15, 16], "doc": [0, 11, 15], "more": [0, 1, 13, 14, 15, 16], "detail": [0, 14, 15, 16], "devic": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "It": [0, 2, 13, 15, 16], "cpu": [0, 15], "gpu": [0, 6, 7, 15], "index": [0, 14, 15], "0": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "1": [0, 1, 3, 4, 5, 9, 10, 11, 13, 14, 15], "By": [0, 2, 10, 15], "batch_siz": [0, 3, 4, 5, 9, 10, 11, 13, 14, 15], "batch": [0, 3, 4, 5, 9, 10, 11, 15], "size": [0, 3, 4, 5, 9, 10, 11, 13, 15], "process": [0, 2, 15], "32": [0, 13, 14, 15], "path_to_retrained_model": [0, 4, 7, 8, 10, 12, 14, 15], "A": [0, 1, 2, 14, 15], "none": [0, 1, 2, 13, 15], "csv_column_nam": 0, "column": [0, 2, 6], "extract": [0, 2, 15], "need": [0, 2, 3, 5, 10, 11, 13, 15], "specifi": [0, 8, 15], "provid": [0, 15], "lead": 0, "csv_column_separ": 0, "separ": [0, 2, 5, 15], "contain": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15], "onli": [0, 1, 2, 6, 13, 15], "one": [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 16], "t": [0, 2, 14, 15], "either": [0, 1, 2, 15], "place": 0, "data": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16], "bool": [0, 1, 2, 15], "case": [0, 15], "sensit": 0, "true": [0, 2, 3, 5, 9, 13, 14, 15], "fals": [0, 6, 7, 12, 14, 15], "f": [0, 13], "ye": 0, "y": [0, 15], "n": [0, 15], "cache_dir": [0, 15], "To": [0, 13, 15], "chang": [0, 3, 5, 15], "cach": [0, 15], "e": [0, 2, 13, 14, 15], "g": [0, 2, 13, 14, 15], "deeppars": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16], "main": [0, 15], "arg": 0, "sourc": [0, 1, 2, 15, 16], "function": [0, 2, 8, 13, 15], "rapidli": [0, 8], "an": [0, 1, 2, 3, 5, 6, 7, 12, 15, 16], "anoth": [0, 2, 3, 5], "usag": 0, "fasttext": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15], "parsed_address": [0, 6, 7, 8, 12, 14, 15], "path_to_model_weight": [0, 15], "datasetcontain": [0, 2, 15], "three": [0, 2, 15], "type": [0, 2, 15], "first": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16], "follow": [0, 2, 13, 14, 15, 16], "pattern": [0, 14, 15], "compon": [0, 1, 15], "class": [0, 1, 2, 14, 15], "second": [0, 1, 2, 6, 15, 16], "which": [0, 1, 13, 14, 15], "mean": [0, 1, 15], "305": [0, 15, 16], "rue": [0, 1, 14, 15], "de": [0, 1, 14, 15], "lila": [0, 1, 14, 15], "app": 0, "2": [0, 1, 3, 4, 5, 9, 10, 11, 13, 14, 15, 16], "tabl": [0, 15], "bellow": 0, "tag": [0, 2, 5, 9, 11, 15], "streetnumb": [0, 1, 6, 14, 15, 16], "unit": [0, 14, 15, 16], "streetnam": [0, 1, 6, 14, 15, 16], "orient": [0, 1, 14, 15], "municip": [0, 1, 6, 14, 15], "provinc": [0, 1, 6, 14, 15], "postal": [0, 14, 15], "code": [0, 13, 14, 15], "generaldeliveri": [0, 14, 15], "o": [0, 3, 4, 5, 9, 10, 11, 12, 13, 15], "similar": [0, 15], "approach": [0, 15], "tupl": [0, 1, 2, 15], "return": [0, 1, 2, 15, 16], "third": 0, "dictionari": [0, 10, 11, 15], "like": [0, 15], "dict": [0, 2, 15], "thi": [0, 2, 12, 13, 14, 15], "allow": [0, 15, 16], "user": [0, 14, 15], "base_parsing_model": 0, "train_dataset_path": 0, "train": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16], "loader": [0, 15], "specif": [0, 13, 14, 15], "dataload": [0, 15], "poutyn": [0, 3, 4, 5, 9, 10, 11, 13, 15], "": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15], "automat": [0, 15], "dure": [0, 14, 15], "thu": [0, 2, 15, 16], "creat": [0, 3, 4, 5, 9, 10, 11, 12, 15], "epoch": [0, 3, 4, 5, 9, 10, 11, 13, 14, 15], "checkpoint": [0, 3, 4, 5, 9, 10, 11, 15], "metric": [0, 15], "tsv": [0, 15], "save": [0, 2, 3, 4, 5, 10, 11, 15], "best": [0, 3, 4, 5, 9, 10, 11, 15], "under": 0, "name_of_the_retrain_pars": [0, 13, 14, 15], "train_ratio": [0, 3, 4, 5, 9, 10, 11, 13, 14, 15], "ratio": [0, 15], "rest": [0, 15], "valid": [0, 6, 15], "8": [0, 2, 3, 4, 5, 9, 10, 11, 13, 14, 15], "80": [0, 14, 15], "20": [0, 14, 15], "split": [0, 2, 13, 15, 16], "5": [0, 3, 4, 5, 9, 10, 11, 14, 15], "num_work": [0, 3, 4, 5, 9, 10, 11, 13, 15], "worker": [0, 15], "learning_r": [0, 13, 15], "learn": [0, 3, 4, 5, 9, 10, 11, 14, 15], "rate": [0, 3, 4, 5, 9, 10, 11, 15], "lr": [0, 3, 4, 5, 9, 10, 11, 15], "01": [0, 3, 4, 5, 9, 10, 11, 14, 15], "seed": [0, 13, 15], "42": [0, 13, 14, 15], "logging_path": [0, 3, 4, 5, 9, 10, 11, 13, 15], "note": [0, 14, 15, 16], "librari": [0, 14], "reload": [0, 3, 5, 10, 14, 15], "state": [0, 14, 15], "ani": [0, 15], "alreadi": [0, 1, 15], "error": [0, 3, 5, 6, 15], "rais": [0, 6, 15], "bpemb": [0, 1, 3, 5, 6, 9, 12, 14, 15], "disable_tensorboard": [0, 15], "disabl": [0, 15], "tensorboard": [0, 15], "monitor": [0, 15], "them": [0, 1, 8, 14, 15], "layers_to_freez": [0, 14, 15], "portion": [0, 15], "seq2seq": [0, 1, 13, 15], "freez": [0, 14, 15], "layer": [0, 14, 15], "reduc": [0, 3, 4, 5, 9, 10, 11, 15], "paramet": [0, 1, 2, 3, 4, 5, 9, 10, 13, 14, 15, 16], "give": [0, 14, 15], "when": [0, 1, 2, 3, 5, 6, 10, 14, 15, 16], "print": [0, 1, 6, 7, 14, 15], "complet": [0, 14], "method": [0, 1, 2, 15], "have": [0, 2, 13, 14, 15], "whitespac": [0, 2, 6, 15, 16], "column1": 0, "column2": 0, "prediction_tag": [0, 10, 11, 14, 15], "predict": [0, 2, 6, 7, 12, 14, 15], "new": [0, 3, 5, 9, 15], "kei": [0, 15], "style": 0, "a_path": [0, 14, 15], "content": [0, 15], "new_tag": 0, "other_tag": 0, "eo": [0, 10, 11, 14, 15], "most": [0, 2, 15], "all": [0, 1, 2, 13, 14, 15], "modifi": [0, 15], "128": [0, 14, 15], "001": [0, 13], "do": [0, 14, 15], "handl": [0, 13, 15], "seq2seq_param": [0, 11, 14, 15], "fine": [0, 3, 4, 5, 9, 10, 11, 15], "tune": [0, 3, 4, 5, 9, 10, 11, 15], "now": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15], "plu": [0, 15], "also": [0, 1, 2, 6, 8, 10, 12, 14, 15, 16], "result": [0, 15], "two": [0, 1, 2, 6, 14, 15], "test_dataset_path": 0, "make": [0, 1, 14], "sampl": 0, "determinist": 0, "except": 0, "callback": [0, 3, 4, 5, 9, 10, 11, 15], "next": [0, 6, 8, 13, 14, 15], "logging_test": 0, "pre": [0, 13, 14], "weight": [0, 15], "requir": [0, 15], "model_typ": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "possibl": [0, 15], "choic": 0, "attent": [0, 3, 5, 15], "light": [0, 14, 15], "saving_cache_dir": 0, "addresspars": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "each": [1, 2, 3, 4, 5, 9, 10, 11, 13, 15], "other": [1, 2, 14, 15], "retriev": 1, "differ": [1, 15], "between": [1, 15, 16], "pars": [1, 2, 13, 16], "network": [1, 15], "recompos": 1, "suggest": 1, "its": [1, 2, 13, 15], "own": [1, 15], "comparison": 1, "newli": 1, "abl": 1, "bring": 1, "out": 1, "among": 1, "compare_tag": 1, "addresses_tags_to_compar": 1, "with_prob": [1, 14, 15], "formattedcomparedaddressestag": 1, "reconstruct": 1, "gener": 1, "union": [1, 15], "multipl": [1, 6, 7, 12, 14, 15, 16], "pass": [1, 2, 15], "option": [1, 2, 8, 15], "flag": [1, 15], "includ": [1, 2, 10, 15, 16], "prob": [1, 15], "report": [1, 15], "probabl": [1, 14, 15], "take": [1, 2, 13, 15], "account": 1, "formattedcomparedaddresstag": 1, "than": [1, 15], "first_parsed_address": 1, "350": [1, 14, 15], "ouest": [1, 14, 15], "qu\u00e9bec": [1, 14], "g1l": [1, 14, 15], "1b6": [1, 14, 15], "postalcod": [1, 6, 14, 15], "second_parsed_address_with_prob": 1, "9987": 1, "9993": 1, "8176": 1, "781": 1, "quebec": [1, 15], "9768": 1, "address_pars": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "addresses_compar": 1, "list_of_compared_address": 1, "comparison_report": 1, "compare_raw": 1, "raw_addresses_to_compar": 1, "str": [1, 2, 15, 16], "formattedcomparedaddressesraw": 1, "togeth": 1, "start": [1, 3, 4, 5, 9, 10, 11, 15], "set": [1, 11, 15, 16], "string": [1, 2, 15], "repres": 1, "raw_address_origin": 1, "raw_address_ident": 1, "raw_address_equival": 1, "raw_address_diff_streetnumb": 1, "450": 1, "raw_addresses_multiples_comparison": 1, "formattedcomparedaddress": 1, "first_address": 1, "formattedparsedaddress": [1, 15], "second_address": 1, "origin": [1, 16], "abstract": 1, "defin": [1, 2, 15], "ex": 1, "address_compar": 1, "raw_identical_comparison": 1, "citi": [1, 15, 16], "properti": 1, "list_of_bool": 1, "boolean": 1, "indic": [1, 15], "equival": [1, 15], "check": 1, "ident": [1, 2], "nb_delimit": 1, "int": [1, 15], "dataset_contain": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "is_training_contain": [2, 6, 7, 12, 14, 15], "If": [2, 15], "init": 2, "must": [2, 14], "attribut": [2, 15], "recommend": [2, 15], "validate_dataset": 2, "characterist": 2, "empti": [2, 6, 15], "a_tag": 2, "another_tag": 2, "length": [2, 15], "respect": 2, "while": 2, "unknown": 2, "determin": 2, "test": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "appli": [2, 6, 15, 16], "doesn": [2, 15], "pickledatasetcontain": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15], "data_path": [2, 15], "import": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "format": [2, 8], "doe": [2, 15], "where": [2, 15], "element": [2, 14, 15], "expect": [2, 14], "len": 2, "csvdatasetcontain": [2, 5, 14, 15], "column_nam": [2, 5, 14, 15], "tag_seperator_reformat_fn": 2, "callabl": [2, 15], "csv_reader_kwarg": 2, "least": [2, 14], "after": [2, 15], "load": [2, 6, 7, 12, 13, 15], "depend": [2, 15], "exactli": 2, "On": [2, 15], "hand": 2, "former": 2, "python": [2, 14, 15], "panda": [2, 6, 7, 15], "charact": [2, 15], "remov": [2, 13, 15, 16], "sequenc": [2, 10, 11, 15], "comma": 2, "keyword": 2, "read_csv": 2, "intern": 2, "along": 2, "sep": [2, 13], "utf": 2, "howev": 2, "overridden": 2, "again": 2, "listdatasetcontain": [2, 15], "data_valid": 2, "validate_if_any_empti": 2, "string_el": 2, "validate_if_any_whitespace_onli": 2, "validate_if_any_non": 2, "download_from_public_repositori": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "let": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "download": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15], "public": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "saving_dir": [3, 4, 5, 6, 7, 9, 10, 11], "file_extens": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "training_dataset_nam": [3, 4, 5, 9, 10, 11], "sample_incomplete_data": [3, 4, 5, 9], "test_dataset_nam": [3, 4, 5, 6, 7, 9, 10, 11, 12], "test_sample_data": [3, 4, 5, 9], "training_contain": [3, 4, 5, 9, 10, 11, 13, 14], "join": [3, 4, 5, 9, 10, 11, 12, 13], "test_contain": [3, 4, 5, 9, 10, 11, 13, 15], "version": [3, 4, 5, 9, 10, 11, 14, 15], "sinc": [3, 4, 5, 9, 10, 11, 13, 14, 15, 16], "realli": [3, 4, 5, 9, 10, 11], "small": [3, 4, 5, 9, 10, 11], "schedul": [3, 4, 5, 9, 10, 11, 15], "lower": [3, 4, 5, 9, 10, 11, 15], "progress": [3, 4, 5, 9, 10, 11], "factor": [3, 4, 5, 9, 10, 11, 15], "10": [3, 4, 5, 9, 10, 11, 15], "lr_schedul": [3, 4, 5, 9, 10, 11, 15], "steplr": [3, 4, 5, 9, 10, 11, 15], "step_siz": [3, 4, 5, 9, 10, 11, 15], "gamma": [3, 4, 5, 9, 10, 11, 15], "ckpt": [3, 4, 5, 7, 10, 12, 15], "so": [3, 5, 13, 15], "wish": [3, 5], "sai": [3, 5], "otherwis": [3, 5, 15], "get": [3, 5, 13], "try": [3, 5], "last": [3, 5, 15], "256": [3, 4, 5, 9, 10, 11, 13], "mechan": [3, 5, 15], "attention_mechan": [3, 5, 9, 14, 15], "previou": [3, 5], "were": [3, 5, 15], "ha": [3, 5], "checkpoints_attent": [3, 5], "path_to_your_uri": [4, 7], "s3": [4, 7, 15], "path_to_your_bucket": [4, 7], "bucket": [4, 15], "pd": [6, 7], "how": [6, 7, 10, 12], "dataset": [6, 7, 8, 12, 13, 14, 15], "addresses_to_pars": [6, 7, 12, 14, 15], "test_data": [6, 7], "300": [6, 7, 12, 15], "qualiti": 6, "rise": 6, "dataerror": 6, "put": 6, "datafram": 6, "analysi": 6, "choos": 6, "field": [6, 15], "parsed_address_data_fram": 6, "to_dict": [6, 15], "export": 8, "Or": [8, 14, 15], "retrain": [8, 15], "sample_incomplete_data_new_prediction_tag": [10, 11], "test_sample_data_new_prediction_tag": [10, 11], "end": [10, 11, 15], "Of": [10, 11, 14, 15], "tag_dictionari": [10, 11], "atag": [10, 11, 14, 15], "anothertag": [10, 11, 14, 15], "metadata": 10, "dimens": 10, "etc": 10, "retrain_modeltype_pars": 10, "retrain_model_path": 10, "retrained_fasttext_address_pars": [10, 15], "param": 11, "smaller": 11, "hidden": [11, 13], "tunabl": 11, "encoder_hidden_s": [11, 14, 15], "512": [11, 14, 15], "decoder_hidden_s": [11, 14, 15], "data_saving_dir": 12, "just": 12, "model_saving_dir": 12, "retrained_model": 12, "retrained_model_nam": 12, "retrained_light_bpemb_address_pars": 12, "model_file_extens": 12, "notebook": 13, "run": [13, 15], "googl": [13, 15], "colab": 13, "compress_pickl": 13, "shutil": 13, "set_se": 13, "timeit": 13, "In": [13, 15], "maxim": 13, "perform": [13, 14], "uk": [13, 14], "canada": [13, 14, 15], "supervis": 13, "shown": [13, 14], "figur": 13, "fortun": 13, "access": [13, 15], "structur": 13, "multin": [13, 14], "focu": 13, "want": 13, "makedir": 13, "zip": 13, "archiv": 13, "subdirectori": 13, "compress": 13, "lzma": 13, "aggress": 13, "algorithm": 13, "offer": [13, 15], "script": 13, "decompress": 13, "basic": [13, 15], "idea": 13, "cell": 13, "cli": [13, 14, 15], "archive_root_path": 13, "archive_path": 13, "unzip": 13, "unpack_arch": 13, "delet": 13, "minor": 13, "modif": 13, "instead": [13, 15], "def": [13, 15], "absolute_file_path": 13, "absolut": 13, "dir_path": 13, "_": 13, "walk": 13, "endswith": 13, "yield": 13, "abspath": 13, "files_directori": 13, "path_to_sav": 13, "lzma_decompress": 13, "root_path_to_sav": 13, "pickled_data": 13, "replac": [13, 15, 16], "file_path": [13, 15], "4": [13, 14, 15], "exist_ok": 13, "open": 13, "wb": 13, "dump": 13, "sever": 13, "minut": 13, "root_dir": 13, "clean_root_dir": 13, "clean_data": 13, "clean_train_directori": 13, "clean_test_directori": 13, "memori": 13, "uk_training_data_path": 13, "gb": [13, 15], "uk_test_data_path": 13, "faster": [13, 15], "But": [13, 15], "what": 13, "befor": [13, 14, 15], "uk_retrain": 13, "ukpars": 13, "further": [13, 14, 15], "improv": [13, 14, 15], "could": [13, 15], "longer": [13, 15], "increas": [13, 15], "actual": 13, "100": [13, 15], "000": [13, 15], "rework": 13, "interfac": 13, "document": 13, "deep learn": 14, "pytorch": [14, 15], "neural network": 14, "machine learn": 14, "natural language process": 14, "data sci": 14, "address pars": 14, "us address pars": 14, "multilingual address pars": 14, "european address pars": 14, "canadian address pars": 14, "street address pars": 14, "art": 14, "street": [14, 15, 16], "deep": 14, "without": [14, 15], "write": 14, "easili": 14, "configur": 14, "compat": 14, "latest": [14, 15], "3": [14, 15, 16], "evalu": 14, "form": 14, "four": [14, 15, 16], "categori": 14, "made": 14, "up": [14, 15], "miss": 14, "amongst": 14, "aforement": 14, "ones": 14, "present": 14, "accuraci": [14, 15], "both": [14, 15, 16], "around": [14, 15], "norwai": 14, "99": 14, "06": 14, "98": 14, "austria": 14, "21": [14, 15], "97": 14, "82": 14, "itali": 14, "65": 14, "93": 14, "mexico": 14, "49": 14, "9": [14, 15, 16], "kingdom": 14, "58": 14, "62": 14, "switzerland": 14, "38": 14, "germani": 14, "72": 14, "denmark": 14, "71": 14, "55": 14, "franc": 14, "6": [14, 15], "18": 14, "brazil": 14, "31": 14, "69": 14, "netherland": 14, "47": 14, "54": 14, "australia": 14, "68": 14, "44": [14, 15], "poland": 14, "64": 14, "52": 14, "czechia": 14, "48": 14, "03": 14, "56": [14, 16], "76": 14, "south": 14, "korea": 14, "russia": 14, "96": 14, "spain": 14, "73": 14, "finland": 14, "77": 14, "zero": [14, 15], "shot": [14, 15], "41": 14, "latvia": 14, "89": 14, "29": 14, "faro": 14, "island": 14, "22": 14, "74": 14, "colombia": 14, "85": 14, "09": 14, "singapor": 14, "86": 14, "67": 14, "19": 14, "r\u00e9union": 14, "84": 14, "78": 14, "indonesia": 14, "63": 14, "04": 14, "japan": 14, "36": 14, "26": 14, "34": 14, "portug": 14, "algeria": 14, "70": 14, "59": 14, "belgium": 14, "14": 14, "malaysia": 14, "83": 14, "ukrain": 14, "estonia": 14, "87": 14, "08": 14, "bangladesh": 14, "28": 14, "slovenia": 14, "hungari": 14, "51": 14, "37": 14, "bermuda": 14, "16": 14, "romania": 14, "90": 14, "philippin": 14, "91": 14, "57": 14, "belaru": 14, "25": 14, "bosnia": 14, "88": 14, "46": 14, "moldova": 14, "lithuania": 14, "paraguai": 14, "02": 14, "07": 14, "croatia": 14, "95": 14, "81": 14, "argentina": 14, "ireland": 14, "kazakhstan": 14, "13": 14, "greec": 14, "bulgaria": 14, "serbia": 14, "92": 14, "79": 14, "caledonia": 14, "94": 14, "45": 14, "sweden": 14, "venezuela": 14, "23": 14, "zealand": 14, "75": 14, "iceland": 14, "7": [14, 15], "india": 14, "uzbekistan": 14, "cypru": 14, "slovakia": 14, "africa": 14, "829": 14, "those": [14, 15], "fasttextatt": 14, "bpembatt": 14, "11": [14, 15], "24": 14, "53": 14, "27": 14, "61": 14, "17": 14, "66": 14, "39": 14, "didn": 14, "did": 14, "therefor": 14, "achiev": 14, "interest": 14, "12": 14, "43": 14, "35": 14, "u": [14, 15], "777": 14, "brockton": 14, "avenu": 14, "abington": 14, "ma": 14, "2351": 14, "ansgarstr": 14, "wallenhorst": 14, "49134": 14, "221": 14, "b": 14, "baker": 14, "\uc11c\uc6b8\ud2b9\ubcc4\uc2dc": 14, "\uc885\ub85c\uad6c": 14, "\uc0ac\uc9c1\ub85c3\uae38": 14, "address_column_nam": [14, 15], "apart": [14, 15], "local": [14, 15], "region": [14, 15], "west": [14, 15], "east": [14, 15], "deliveri": [14, 15], "speed": [14, 15], "mynewpars": 14, "address_compon": [14, 15], "url": [14, 15], "fasttextattent": [14, 15], "bpembattent": [14, 15], "magnitud": [14, 15], "download_model": [14, 15], "model_nam": 14, "environ": 14, "stabl": [14, 15], "pip": 14, "develop": 14, "git": 14, "http": [14, 15], "github": 14, "com": 14, "graal": 14, "research": 14, "dev": 14, "misc": 14, "yassine2020leverag": 14, "titl": 14, "leverag": 14, "subword": [14, 15], "embed": [14, 15], "author": 14, "marouan": 14, "yassin": 14, "david": 14, "beauchemin": 14, "fran\u00e7oi": 14, "laviolett": 14, "luc": 14, "lamontagn": 14, "year": 14, "2020": 14, "eprint": 14, "2006": 14, "16152": 14, "archiveprefix": 14, "arxiv": 14, "packag": 14, "org": [14, 15], "welcom": 14, "input": 14, "whether": [14, 15], "regard": 14, "bug": 14, "found": [14, 15], "featur": 14, "proposit": 14, "sure": 14, "look": 14, "guidelin": 14, "matter": 14, "lgplv3": 14, "processor": [14, 15], "compar": [14, 15], "singl": [14, 15], "reli": 15, "french": 15, "byte": 15, "pair": 15, "multilingu": 15, "architectur": 15, "avail": [15, 16], "articl": 15, "assess": 15, "conduct": 15, "experi": 15, "linux": 15, "torch": 15, "cuda": 15, "march": 15, "2023": 15, "ram": 15, "execut": 15, "wa": [15, 16], "obtain": 15, "183": 15, "frac": 15, "text": 15, "total": 15, "per": 15, "addit": 15, "propos": 15, "lighter": 15, "map": 15, "averag": 15, "littl": 15, "bit": 15, "countri": [15, 16], "With": 15, "0023": 15, "0004": 15, "0043": 15, "0007": 15, "0028": 15, "0037": 15, "0055": 15, "0015": 15, "0081": 15, "0019": 15, "libpost": 15, "00007": 15, "window": 15, "gensim": 15, "go": 15, "0128": 15, "0026": 15, "0230": 15, "0057": 15, "0170": 15, "0030": 15, "0179": 15, "0044": 15, "0286": 15, "0075": 15, "within": 15, "call": 15, "linear": 15, "furthermor": 15, "mani": 15, "trick": 15, "few": 15, "pin": 15, "oper": 15, "useless": 15, "round": 15, "verbos": 15, "s3path": 15, "offlin": 15, "sometim": 15, "slower": 15, "fastest": 15, "quicker": 15, "lightest": 15, "less": 15, "accur": 15, "ignor": 15, "consid": 15, "counterpart": 15, "extra": 15, "mb": 15, "statist": 15, "object": 15, "exist": 15, "ask": 15, "digit": 15, "turn": 15, "off": 15, "path_to_retrain_model": 15, "azur": 15, "aw": 15, "uri": 15, "cloudpathlib": 15, "drivendata": 15, "condit": 15, "verifi": 15, "root": 15, "116": 15, "send": 15, "node": 15, "internet": 15, "spawn": 15, "fork": 15, "multiprocess": 15, "issu": [15, 16], "mai": 15, "observ": 15, "hypothes": 15, "due": 15, "sqlite": 15, "databas": 15, "behind": 15, "pymagnitud": 15, "intens": 15, "subsequ": 15, "appear": 15, "parse_address": 15, "path_to_a_retrain_fasttext_model": 15, "don": 15, "path_to_a_retrain_fasttext_attention_model": 15, "servic": 15, "assum": 15, "been": 15, "dir": 15, "cloudpath": 15, "__call__": 15, "with_hyphen_split": 15, "pre_processor": [15, 16], "criteria": 15, "00035": 15, "hyphen": [15, 16], "regular": [15, 16], "express": [15, 16], "alphanumer": 15, "add": 15, "hyphen_clean": [15, 16], "lowercas": [15, 16], "alwai": 15, "ad": 15, "setup": 15, "order": 15, "coma": [15, 16], "doubl": [15, 16], "clean": [15, 16], "trail": [15, 16], "larger": 15, "a_large_list_dataset": 15, "1024": 15, "strip_parenthesi": 15, "strip": 15, "get_formatted_model_nam": 15, "train_dataset_contain": 15, "val_dataset_contain": 15, "float": 15, "framework": 15, "retrained_": 15, "_address_pars": 15, "wai": 15, "As": 15, "val": 15, "procedur": 15, "correspond": 15, "token": 15, "later": 15, "scratch": 15, "input_s": 15, "encoder_num_lay": 15, "decod": 15, "decoder_num_lay": 15, "Will": 15, "compos": 15, "part": 15, "dens": 15, "represent": 15, "final": 15, "fulli": 15, "connect": 15, "No": 15, "frozen": 15, "prediction_lay": 15, "manual": 15, "modifiedpredictiontag": 15, "modifiedseq2seqconfigur": 15, "freezedlay": 15, "overrid": 15, "stat": 15, "chanc": 15, "lose": 15, "too": 15, "much": 15, "person": 15, "should": 15, "rel": 15, "low": 15, "sgd": 15, "optim": 15, "nll": 15, "loss": 15, "shuffl": 15, "teacher": 15, "forc": 15, "updat": 15, "work": 15, "path_to_a_pickle_dataset": 15, "path_to_a_csv_dataset": 15, "val_data_path": 15, "path_to_a_csv_val_dataset": 15, "val_contain": 15, "myparsernam": 15, "test_dataset_contain": 15, "path_to_a_pickle_test_dataset": 15, "phase": 15, "path_to_a_pickle_train_dataset": 15, "train_contain": 15, "save_model_weight": 15, "save_address_parser_weight": 15, "commonli": 15, "known": 15, "x": 15, "9981": 15, "raw_address": 15, "raw": 15, "address_parsed_compon": 15, "wolf": 15, "keep": 15, "through": 15, "format_address": 15, "capitalize_field": 15, "upper_case_field": 15, "field_separ": 15, "filter": 15, "capit": 15, "upper": 15, "formatted_address": 15, "fields_separ": 15, "convert": 15, "to_list_of_tupl": 15, "to_panda": 15, "to_pickl": 15, "pre_process": 16, "coma_clean": 16, "lower_clean": 16, "trailing_whitespace_clean": 16, "double_whitespaces_clean": 16, "proper": 16, "137": 16, "z": 16, "group": 16, "letter": 16, "thei": 16, "3a": 16, "305a": 16, "saint": 16, "jean": 16, "regex": 16, "detect": 16}, "objects": {"deepparse.cli.parse": [[0, 0, 1, "", "main"]], "deepparse.cli.retrain": [[0, 0, 1, "", "main"]], "deepparse.cli.test": [[0, 0, 1, "", "main"]], "deepparse.comparer": [[1, 1, 1, "", "AddressesComparer"], [1, 1, 1, "", "FormattedComparedAddresses"], [1, 1, 1, "", "FormattedComparedAddressesRaw"], [1, 1, 1, "", "FormattedComparedAddressesTags"]], "deepparse.comparer.AddressesComparer": [[1, 2, 1, "", "compare_raw"], [1, 2, 1, "", "compare_tags"]], "deepparse.comparer.FormattedComparedAddresses": [[1, 2, 1, "", "comparison_report"], [1, 3, 1, "", "equivalent"], [1, 3, 1, "", "identical"], [1, 3, 1, "", "list_of_bool"]], "deepparse.data_validation.data_validation": [[2, 0, 1, "", "validate_if_any_empty"], [2, 0, 1, "", "validate_if_any_none"], [2, 0, 1, "", "validate_if_any_whitespace_only"]], "deepparse.dataset_container": [[2, 1, 1, "", "CSVDatasetContainer"], [2, 1, 1, "", "DatasetContainer"], [2, 1, 1, "", "ListDatasetContainer"], [2, 1, 1, "", "PickleDatasetContainer"]], "deepparse.parser": [[15, 1, 1, "", "AddressParser"], [15, 1, 1, "", "FormattedParsedAddress"]], "deepparse.parser.AddressParser": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "get_formatted_model_name"], [15, 2, 1, "", "retrain"], [15, 2, 1, "", "save_model_weights"], [15, 2, 1, "", "test"]], "deepparse.parser.FormattedParsedAddress": [[15, 4, 1, "", "address_parsed_components"], [15, 2, 1, "", "format_address"], [15, 4, 1, "", "raw_address"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_list_of_tuples"], [15, 2, 1, "", "to_pandas"], [15, 2, 1, "", "to_pickle"]], "deepparse.pre_processing.pre_processor": [[16, 0, 1, "", "coma_cleaning"], [16, 0, 1, "", "double_whitespaces_cleaning"], [16, 0, 1, "", "hyphen_cleaning"], [16, 0, 1, "", "lower_cleaning"], [16, 0, 1, "", "trailing_whitespace_cleaning"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"cli": [0, 8], "pars": [0, 6, 7, 8, 12, 14, 15], "dataset": [0, 2, 5], "format": [0, 1, 15], "export": 0, "retrain": [0, 3, 4, 5, 9, 10, 11, 12, 13, 14], "test": 0, "download": [0, 14], "compar": 1, "addressescompar": 1, "address": [1, 6, 7, 8, 12, 13, 14, 15], "raw": 1, "tag": [1, 10, 14], "contain": 2, "interfac": 2, "implement": 2, "valid": 2, "step": 2, "pretrain": [3, 4, 5], "model": [3, 4, 5, 9, 12, 13, 14, 15], "us": [5, 8, 12, 13, 14], "csv": 5, "our": [8, 14], "an": [9, 13, 14], "attent": [9, 14], "mechan": [9, 14], "With": [10, 11, 14], "new": [10, 11, 14], "predict": 10, "seq2seq": [11, 14], "paramet": 11, "parser": [13, 15], "singl": 13, "countri": [13, 14], "here": 14, "i": 14, "deeppars": 14, "result": 14, "clean": 14, "data": 14, "incomplet": 14, "get": 14, "start": 14, "from": 14, "command": 14, "line": 14, "your": 14, "own": 14, "scratch": 14, "instal": 14, "cite": 14, "contribut": 14, "licens": 14, "api": 14, "refer": 14, "exampl": 14, "indic": 14, "tabl": 14, "pre": [15, 16], "train": 15, "complet": 15, "memori": 15, "usag": 15, "time": 15, "perform": 15, "addresspars": 15, "processor": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"CLI": [[0, "cli"]], "Parse": [[0, "parse"]], "Dataset Format": [[0, "dataset-format"]], "Exporting Format": [[0, "exporting-format"]], "Retrain": [[0, "retrain"]], "Test": [[0, "test"]], "Download": [[0, "download"]], "Comparer": [[1, "comparer"]], "AddressesComparer": [[1, "addressescomparer"]], "Formatted Compared Addresses": [[1, "formatted-compared-addresses"]], "Formatted Compared Addresses Raw": [[1, "formatted-compared-addresses-raw"]], "Formatted Compared Addresses Tags": [[1, "formatted-compared-addresses-tags"]], "Dataset Container": [[2, "dataset-container"]], "Interface": [[2, "interface"]], "Implementations": [[2, "implementations"]], "Dataset Validation Steps": [[2, "dataset-validation-steps"]], "Retrain a Pretrained Model": [[3, "retrain-a-pretrained-model"], [4, "retrain-a-pretrained-model"]], "Retrain a Pretrained Model Using a CSV Dataset": [[5, "retrain-a-pretrained-model-using-a-csv-dataset"]], "Parse Addresses": [[6, "parse-addresses"], [7, "parse-addresses"]], "Parse Addresses Using Our CLI": [[8, "parse-addresses-using-our-cli"]], "Retrain an Attention Mechanism Model": [[9, "retrain-an-attention-mechanism-model"]], "Retrain With New Prediction Tags": [[10, "retrain-with-new-prediction-tags"]], "Retrain With New Seq2Seq Parameters": [[11, "retrain-with-new-seq2seq-parameters"]], "Use a Retrained Model to Parse Addresses": [[12, "use-a-retrained-model-to-parse-addresses"]], "Retrain an Address Parser for Single Country Uses": [[13, "retrain-an-address-parser-for-single-country-uses"]], "Retrain a Model": [[13, "retrain-a-model"], [14, "retrain-a-model"]], "Here is Deepparse": [[14, "here-is-deepparse"]], "Countries and Results": [[14, "countries-and-results"]], "Clean Data": [[14, "clean-data"]], "Incomplete Data": [[14, "incomplete-data"]], "Getting Started": [[14, "getting-started"]], "Parse Addresses From the Command Line": [[14, "parse-addresses-from-the-command-line"]], "Parse Addresses Using Your Own Retrained Model": [[14, "parse-addresses-using-your-own-retrained-model"]], "Retrain a Model With an Attention Mechanism": [[14, "retrain-a-model-with-an-attention-mechanism"]], "Retrain a Model With New Tags": [[14, "retrain-a-model-with-new-tags"]], "Retrain a Seq2Seq Model From Scratch": [[14, "retrain-a-seq2seq-model-from-scratch"]], "Download Our Models": [[14, "download-our-models"]], "Installation": [[14, "installation"]], "Cite": [[14, "cite"]], "Contributing to Deepparse": [[14, "contributing-to-deepparse"]], "License": [[14, "license"]], "API Reference": [[14, "api-reference"]], "API": [[14, null]], "Examples": [[14, null]], "Indices and Tables": [[14, "indices-and-tables"]], "Parser": [[15, "parser"]], "Pre-trained Complete Model": [[15, "pre-trained-complete-model"]], "Memory Usage and Time Performance": [[15, "memory-usage-and-time-performance"]], "AddressParser": [[15, "addressparser"]], "Formatted Parsed Address": [[15, "formatted-parsed-address"]], "Pre-Processors": [[16, "pre-processors"]]}, "indexentries": {"main() (in module deepparse.cli.parse)": [[0, "deepparse.cli.parse.main"]], "main() (in module deepparse.cli.retrain)": [[0, "deepparse.cli.retrain.main"]], "main() (in module deepparse.cli.test)": [[0, "deepparse.cli.test.main"]], "addressescomparer (class in deepparse.comparer)": [[1, "deepparse.comparer.AddressesComparer"]], "formattedcomparedaddresses (class in deepparse.comparer)": [[1, "deepparse.comparer.FormattedComparedAddresses"]], "formattedcomparedaddressesraw (class in deepparse.comparer)": [[1, "deepparse.comparer.FormattedComparedAddressesRaw"]], "formattedcomparedaddressestags (class in deepparse.comparer)": [[1, "deepparse.comparer.FormattedComparedAddressesTags"]], "compare_raw() (deepparse.comparer.addressescomparer method)": [[1, "deepparse.comparer.AddressesComparer.compare_raw"]], "compare_tags() (deepparse.comparer.addressescomparer method)": [[1, "deepparse.comparer.AddressesComparer.compare_tags"]], "comparison_report() (deepparse.comparer.formattedcomparedaddresses method)": [[1, "deepparse.comparer.FormattedComparedAddresses.comparison_report"]], "equivalent (deepparse.comparer.formattedcomparedaddresses property)": [[1, "deepparse.comparer.FormattedComparedAddresses.equivalent"]], "identical (deepparse.comparer.formattedcomparedaddresses property)": [[1, "deepparse.comparer.FormattedComparedAddresses.identical"]], "list_of_bool (deepparse.comparer.formattedcomparedaddresses property)": [[1, "deepparse.comparer.FormattedComparedAddresses.list_of_bool"]], "csvdatasetcontainer (class in deepparse.dataset_container)": [[2, "deepparse.dataset_container.CSVDatasetContainer"]], "datasetcontainer (class in deepparse.dataset_container)": [[2, "deepparse.dataset_container.DatasetContainer"]], "listdatasetcontainer (class in deepparse.dataset_container)": [[2, "deepparse.dataset_container.ListDatasetContainer"]], "pickledatasetcontainer (class in deepparse.dataset_container)": [[2, "deepparse.dataset_container.PickleDatasetContainer"]], "validate_if_any_empty() (in module deepparse.data_validation.data_validation)": [[2, "deepparse.data_validation.data_validation.validate_if_any_empty"]], "validate_if_any_none() (in module deepparse.data_validation.data_validation)": [[2, "deepparse.data_validation.data_validation.validate_if_any_none"]], "validate_if_any_whitespace_only() (in module deepparse.data_validation.data_validation)": [[2, "deepparse.data_validation.data_validation.validate_if_any_whitespace_only"]], "addressparser (class in deepparse.parser)": [[15, "deepparse.parser.AddressParser"]], "formattedparsedaddress (class in deepparse.parser)": [[15, "deepparse.parser.FormattedParsedAddress"]], "__call__() (deepparse.parser.addressparser method)": [[15, "deepparse.parser.AddressParser.__call__"]], "address_parsed_components (deepparse.parser.formattedparsedaddress attribute)": [[15, "deepparse.parser.FormattedParsedAddress.address_parsed_components"]], "format_address() (deepparse.parser.formattedparsedaddress method)": [[15, "deepparse.parser.FormattedParsedAddress.format_address"]], "get_formatted_model_name() (deepparse.parser.addressparser method)": [[15, "deepparse.parser.AddressParser.get_formatted_model_name"]], "raw_address (deepparse.parser.formattedparsedaddress attribute)": [[15, "deepparse.parser.FormattedParsedAddress.raw_address"]], "retrain() (deepparse.parser.addressparser method)": [[15, "deepparse.parser.AddressParser.retrain"]], "save_model_weights() (deepparse.parser.addressparser method)": [[15, "deepparse.parser.AddressParser.save_model_weights"]], "test() (deepparse.parser.addressparser method)": [[15, "deepparse.parser.AddressParser.test"]], "to_dict() (deepparse.parser.formattedparsedaddress method)": [[15, "deepparse.parser.FormattedParsedAddress.to_dict"]], "to_list_of_tuples() (deepparse.parser.formattedparsedaddress method)": [[15, "deepparse.parser.FormattedParsedAddress.to_list_of_tuples"]], "to_pandas() (deepparse.parser.formattedparsedaddress method)": [[15, "deepparse.parser.FormattedParsedAddress.to_pandas"]], "to_pickle() (deepparse.parser.formattedparsedaddress method)": [[15, "deepparse.parser.FormattedParsedAddress.to_pickle"]], "coma_cleaning() (in module deepparse.pre_processing.pre_processor)": [[16, "deepparse.pre_processing.pre_processor.coma_cleaning"]], "double_whitespaces_cleaning() (in module deepparse.pre_processing.pre_processor)": [[16, "deepparse.pre_processing.pre_processor.double_whitespaces_cleaning"]], "hyphen_cleaning() (in module deepparse.pre_processing.pre_processor)": [[16, "deepparse.pre_processing.pre_processor.hyphen_cleaning"]], "lower_cleaning() (in module deepparse.pre_processing.pre_processor)": [[16, "deepparse.pre_processing.pre_processor.lower_cleaning"]], "trailing_whitespace_cleaning() (in module deepparse.pre_processing.pre_processor)": [[16, "deepparse.pre_processing.pre_processor.trailing_whitespace_cleaning"]]}})